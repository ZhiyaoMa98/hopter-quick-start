# Let `cargo run` invoke the flash script.
[target.thumbv7em-none-eabihf]
runner = "./flash-board.sh"

rustflags = [
  # This is needed if your flash or ram addresses are not aligned to 0x10000 in memory.x
  # See https://github.com/rust-embedded/cortex-m-quickstart/pull/95
  "-C", "link-arg=--nmagic",

  # LLD (shipped with the modified Rust toolchain) is used as the linker and the linker
  # script `link.ld` will be generated by the Hopter crate.
  "-C", "link-arg=-Tlink.ld",

  # Perform stack unwinding upon panic.
  "-C", "panic=unwind",

  # To prevent compiler bugs.
  # See https://github.com/rust-lang/rust/issues/95871
  "-C", "codegen-units=1",
]

# Build the `core` and `alloc` crate locally with the modified Rust compiler toolchain
# instead of using officially prebuilt version.
[unstable]
build-std = ["core", "alloc"]

# Currently Hopter only supports this target.
[build]
target = "thumbv7em-none-eabihf" # Cortex-M4F and Cortex-M7F (with FPU)

[profile.release]
opt-level = 3
